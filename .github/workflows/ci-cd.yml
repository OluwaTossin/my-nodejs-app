name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: |
          docker build -t myapp .

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1

      - name: Push Docker image to ECR
        run: |
          docker tag myapp:latest 147360193006.dkr.ecr.us-east-1.amazonaws.com/myapp:latest
          docker push 147360193006.dkr.ecr.us-east-1.amazonaws.com/myapp:latest

      - name: Deploy to EC2
        run: |
          aws s3 cp s3://devops-project-ec2.pem/DevOps-Project-EC2.pem DevOps-Project-EC2.pem
          chmod 400 DevOps-Project-EC2.pem
          ssh -o StrictHostKeyChecking=no -i DevOps-Project-EC2.pem ec2-user@18.204.228.199 << EOF
            sudo yum update -y
            sudo yum install -y docker
            sudo service docker start
            aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws configure set default.region us-east-1
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 147360193006.dkr.ecr.us-east-1.amazonaws.com
            docker pull 147360193006.dkr.ecr.us-east-1.amazonaws.com/myapp:latest
            docker run -d -p 80:80 147360193006.dkr.ecr.us-east-1.amazonaws.com/myapp:latest
            echo "
            global:
              scrape_interval: 15s

            scrape_configs:
              - job_name: 'prometheus'
                static_configs:
                  - targets: ['localhost:9090']

              - job_name: 'nodejs-app'
                static_configs:
                  - targets: ['localhost:3000']
            " > /home/ec2-user/prometheus.yml
            sudo docker run -d --name prometheus -p 9090:9090 -v /home/ec2-user/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus
            sudo docker run -d --name=grafana -p 3000:3000 grafana/grafana
          EOF
